plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.5'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'idea'
    id 'eclipse'
}

group 'org.example'
version '1.0-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    all*.exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-log4j2
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-log4j2'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-validation
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '2.5.5'
    // https://mvnrepository.com/artifact/com.opencsv/opencsv
    implementation group: 'com.opencsv', name: 'opencsv', version: '5.5.2'

    // https://mvnrepository.com/artifact/org.projectlombok/lombok
    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.22'
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-gradle-plugin
    compileClasspath group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.5.5'
    annotationProcessor group: 'org.springframework.boot', name: 'spring-boot-gradle-plugin', version: '2.5.5'

    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-devtools
    developmentOnly group: 'org.springframework.boot', name: 'spring-boot-devtools', version: '2.5.5'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.1'
}

test {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}